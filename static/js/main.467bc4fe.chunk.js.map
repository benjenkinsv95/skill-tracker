{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","styles/heroStyles.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/UnauthenticatedHome.js","api/practices.js","components/skills/MySkills.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","gradientStyles","background","minHeight","heroStyles","display","flexDirection","justifyContent","alignItems","maxWidth","margin","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","localStorage","setItem","JSON","stringify","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","removeItem","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Home","getMyPractices","get","practices","sort","b","streakInDays","daysSinceStreak","Promise","resolve","markPractice","isToday","dateString","someDate","Date","today","getDate","getMonth","getFullYear","MySkills","setPractices","fetchPractices","error","practiceJSX","handlePracticeClick","length","map","skill","lastPracticed","Card","text","Body","Title","description","Text","reviewUrl","href","rel","size","practiceUrl","onClick","Footer","Spinner","animation","role","App","getItem","parse","loadUser","msgAlerts","setMsgAlerts","uuid","path","element","UnauthenticatedHome","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"gQAkDeA,MA3Cf,YAA2D,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE7C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAlBAC,QAAQC,IAAIH,GAIZI,qBAAU,WAER,IAAMC,EAAKC,YAAW,kBAAMP,GAAQ,KAAQ,KAO5C,OALAE,EAAaI,GAKN,WACLE,aAAaP,MAEd,IAGD,cAACQ,EAAA,EAAD,CAEEd,QAASA,EAETe,QAAS,kBAAMV,GAAQ,IAEvBW,aAAW,EAEXZ,KAAMA,EARR,SAUE,sBAAKa,UAAU,YAAf,UACE,cAACH,EAAA,EAAMI,QAAP,UAAgBjB,IAChB,mBAAGgB,UAAU,aAAb,SAA2Bf,U,gCCtC7BiB,EACJ,qCACE,cAAC,IAAD,CAASC,GAAG,aAAaH,UAAU,WAAnC,uBACA,cAAC,IAAD,CAASG,GAAG,mBAAmBH,UAAU,WAAzC,6BACA,cAAC,IAAD,CAASG,GAAG,YAAYH,UAAU,WAAlC,yBAIEI,EACJ,qCACE,cAAC,IAAD,CAASD,GAAG,WAAWH,UAAU,WAAjC,qBACA,cAAC,IAAD,CAASG,GAAG,WAAWH,UAAU,WAAjC,wBAIEK,EACJ,6BAyBaC,EApBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAO1B,QAAQ,OAAO2B,OAAO,KAAxC,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,UACE,cAAC,IAAD,CAAMT,GAAG,IAAIU,MAAO,CAAEC,MAAO,OAAQC,eAAgB,QAArD,6BAEF,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBxB,GAAG,mBAApB,SACE,eAACyB,EAAA,EAAD,CAAKnB,UAAU,UAAf,UACGO,GACC,uBAAMP,UAAU,mBAAhB,sBAA6CO,EAAKa,SAEnDf,EACAE,EAAOL,EAAuBE,a,yBCvCnCiB,EACQ,sDADRA,EAES,sCASAC,EANkB,cAA7BC,OAAOC,SAASC,SACTJ,EAEAA,E,iBCNEK,EAAS,SAACN,EAAOO,EAAUC,GACtC,OAAOC,IAAMC,KAAKR,EAAS,YAAa,CACtCS,YAAa,CACXX,QACAO,WACAK,sBAAuBJ,MAKhBK,EAAS,SAACb,EAAOO,GAC5B,OAAOE,IAAMC,KAAKR,EAAS,YAAa,CACtCS,YAAa,CACXX,QACAO,eAKOO,EAAU,SAAA3B,GACrB,OAAOsB,IAAMM,OAAOb,EAAS,aAAc,CACzCc,QAAS,CACPC,cAAc,SAAD,OAAW9B,EAAK+B,WAKtBC,EAAiB,SAACC,EAAaC,EAAalC,GACvD,OAAOsB,IAAMa,MACXpB,EAAS,oBACT,CACEqB,UAAW,CACTC,IAAKJ,EACLK,IAAKJ,IAGT,CACEL,QAAS,CACPC,cAAc,SAAD,OAAW9B,EAAK+B,W,sBC/BxBQ,EAAiB,CAC5BC,WACE,iGACFjC,MAAO,QAEPkC,UAAU,gBAAD,OAfU,OAeV,MAQIC,EALQ,2BAjBK,CAC1BC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,OACVC,OAAQ,MAaLT,GCyEUU,EAnFA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,QAASnD,EAAW,EAAXA,KACnC,EAA0BrB,mBAAS,IAAnC,mBAAOkC,EAAP,KAAcuC,EAAd,KACA,EAAgCzE,mBAAS,IAAzC,mBAAOyC,EAAP,KAAiBiC,EAAjB,KACA,EAAwD1E,mBAAS,IAAjE,mBAAO0C,EAAP,KAA6BiC,EAA7B,KACA,EAA4C3E,oBAAS,GAArD,mBAAO4E,EAAP,KAAuBC,EAAvB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACfD,EAAME,iBADS,kBAIPzC,EAAON,EAAOO,EAAUC,GAJjB,uBAKKK,EAAOb,EAAOO,GALnB,OAKPyC,EALO,OAMbV,EAAQU,EAAIC,KAAK9D,MAEjB+D,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAAIC,KAAK9D,OAErDkD,EAAS,CACPzE,QAAS,kBACTC,QC5BqB,yDD6BrBF,QAAS,YAEXgF,GAAkB,GAfL,kDAiBbJ,EAAS,IACTC,EAAY,IACZC,EAAwB,IACxBJ,EAAS,CACPzE,QAAS,8BAAgC,KAAMC,QAC/CA,QCrCqB,qEDsCrBF,QAAS,WAvBE,0DAAH,sDA4Bd,OAAI+E,GAAkBvD,EACb,cAAC,IAAD,CAAUJ,GAAG,eAIpB,qBAAKU,MAAOoC,EAAYjD,UAAU,MAAlC,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAAC0E,EAAA,EAAD,CAAMC,SAAUX,EAAhB,UACE,eAACU,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,MAAO/D,EACPgE,YAAY,cACZC,SAAU,SAAApB,GAAK,OAAIN,EAASM,EAAMqB,OAAOH,aAG7C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,WACLC,MAAOxD,EACPsD,KAAK,WACLG,YAAY,WACZC,SAAU,SAAApB,GAAK,OAAIL,EAAYK,EAAMqB,OAAOH,aAGhD,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,uBACLC,MAAOvD,EACPqD,KAAK,WACLG,YAAY,mBACZC,SAAU,SAAApB,GAAK,OAAIJ,EAAwBI,EAAMqB,OAAOH,aAG5D,cAACI,EAAA,EAAD,CAAQvF,UAAU,OAAOjB,QAAQ,OAAOkG,KAAK,SAA7C,6BENKO,EAtEA,SAAC,GAAiC,IAA/B/B,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,QAASnD,EAAW,EAAXA,KACnC,EAA0BrB,mBAAS,IAAnC,mBAAOkC,EAAP,KAAcuC,EAAd,KACA,EAAgCzE,mBAAS,IAAzC,mBAAOyC,EAAP,KAAiBiC,EAAjB,KACA,EAA4C1E,oBAAS,GAArD,mBAAO4E,EAAP,KAAuBC,EAAvB,KAEM0B,EAAQ,uCAAG,WAAOxB,GAAP,eAAAC,EAAA,6DACfD,EAAME,iBADS,kBAIKlC,EAAOb,EAAOO,GAJnB,OAIPyC,EAJO,OAKbV,EAAQU,EAAIC,KAAK9D,MAEjB+D,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAAIC,KAAK9D,OAErDkD,EAAS,CACPzE,QAAS,kBACTC,QDxBqB,WCyBrBF,QAAS,YAEXgF,GAAkB,GAdL,kDAgBbJ,EAAS,IACTC,EAAY,IACZH,EAAS,CACPzE,QAAS,8BAAgC,KAAMC,QAC/CA,QDhCqB,kECiCrBF,QAAS,WArBE,0DAAH,sDA0Bd,OAAI+E,GAAkBvD,EACb,cAAC,IAAD,CAAUJ,GAAG,eAIpB,qBAAKU,MAAOoC,EAAYjD,UAAU,MAAlC,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAAC0E,EAAA,EAAD,CAAMC,SAAUc,EAAhB,UACE,eAACf,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,MAAO/D,EACPgE,YAAY,cACZC,SAAU,SAAApB,GAAK,OAAIN,EAASM,EAAMqB,OAAOH,aAG7C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,WACLC,MAAOxD,EACPsD,KAAK,WACLG,YAAY,WACZC,SAAU,SAAApB,GAAK,OAAIL,EAAYK,EAAMqB,OAAOH,aAIhD,cAACI,EAAA,EAAD,CAAQvF,UAAU,OAAOjB,QAAQ,OAAOkG,KAAK,SAA7C,6BChCKS,EAnCC,SAAC,GAAmC,IAAjCjC,EAAgC,EAAhCA,SAAUkC,EAAsB,EAAtBA,UAAWpF,EAAW,EAAXA,KACtC,EAA4CrB,oBAAS,GAArD,mBAAO4E,EAAP,KAAuBC,EAAvB,KA2BA,OAvBAtE,qBAAU,YAGY,uCAAG,sBAAAyE,EAAA,6DACrBT,EAAS,CACPzE,QAAS,0BACTC,QFbsB,kBEctBF,QAAS,YAGXuF,aAAasB,WAAW,QAGxBD,IACA5B,GAAkB,GAXG,SAcf7B,EAAQ3B,GAdO,2CAAH,qDAiBpBsF,KACC,KAEEtF,GAAQuD,EACJ,cAAC,IAAD,CAAU3D,GAAG,MAGf,ICsCM2F,EAlEQ,SAAC,GAAwB,IAAtBrC,EAAqB,EAArBA,SAAUlD,EAAW,EAAXA,KAClC,EAAsCrB,mBAAS,IAA/C,mBAAOsD,EAAP,KAAoBuD,EAApB,KACA,EAAsC7G,mBAAS,IAA/C,mBAAOuD,EAAP,KAAoBuD,EAApB,KACA,EAA4C9G,oBAAS,GAArD,mBAAO4E,EAAP,KAAuBC,EAAvB,KAEMkC,EAAgB,uCAAG,WAAOhC,GAAP,SAAAC,EAAA,6DACvBD,EAAME,iBADiB,kBAIf5B,EAAeC,EAAaC,EAAalC,GAJ1B,OAKrBkD,EAAS,CACPzE,QAAS,0BACTC,QHjB6B,iCGkB7BF,QAAS,YAEXgF,GAAkB,GAVG,gDAYrBgC,EAAe,IACfC,EAAe,IACfvC,EAAS,CACPzE,QAAS,sCAAwC,KAAMC,QACvDA,QHzB6B,qEG0B7BF,QAAS,WAjBU,yDAAH,sDAsBtB,OAAKwB,GAAQuD,EACJ,cAAC,IAAD,CAAU3D,GAAG,eAIpB,qBAAKU,MAAOoC,EAAYjD,UAAU,MAAlC,SACE,sBAAKA,UAAU,kCAAf,UACE,iDACA,eAAC0E,EAAA,EAAD,CAAMC,SAAUsB,EAAhB,UACE,eAACvB,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,cACLC,MAAO3C,EACPyC,KAAK,WACLG,YAAY,eACZC,SAAU,SAAApB,GAAK,OAAI8B,EAAe9B,EAAMqB,OAAOH,aAGnD,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,cACLC,MAAO1C,EACPwC,KAAK,WACLG,YAAY,eACZC,SAAU,SAAApB,GAAK,OAAI+B,EAAe/B,EAAMqB,OAAOH,aAInD,cAACI,EAAA,EAAD,CAAQvF,UAAU,OAAOjB,QAAQ,OAAOkG,KAAK,SAA7C,6BC/CKiB,EAlBF,SAAC,GACZ,OADyB,EAAX3F,KAEL,cAAC,IAAD,CAAUJ,GAAG,cAGpB,sBAAKU,MAAOoC,EAAZ,UACE,+CACA,oBAAIjD,UAAU,OAAd,+CACA,cAAC,IAAD,CAAMG,GAAG,WAAT,SACE,wBAAQH,UAAU,sBAAlB,2BCVKmG,EAAc,uCAAG,WAAO5F,GAAP,eAAA2D,EAAA,sEACVrC,IAAMuE,IAAI9E,EAAS,iBAAkB,CACrDc,QAAS,CACPC,cAAc,SAAD,OAAW9B,EAAK+B,UAHL,cACtB8B,EADsB,QAUxBC,KAAKgC,UAAUC,MAAK,SAACpC,EAAGqC,GAAJ,OAAUrC,EAAEsC,aAAeD,EAAEC,cAAgBD,EAAEE,gBAAkBvC,EAAEuC,mBAV/D,kBAarBC,QAAQC,QAAR,eAAqBvC,KAbA,2CAAH,sDAgBdwC,EAAe,SAAClH,EAAIa,GAC/BsB,IAAMa,MAAMpB,EAAS,kBAAoB5B,EAAK,IAAK,GAAI,CACrD0C,QAAS,CACPC,cAAc,SAAD,OAAW9B,EAAK+B,W,gBCb7BuE,EAAU,SAACC,GACf,IAAMC,EAAW,IAAIC,KAAKF,GACpBG,EAAQ,IAAID,KAClB,OAAOD,EAASG,YAAcD,EAAMC,WAClCH,EAASI,aAAeF,EAAME,YAC9BJ,EAASK,gBAAkBH,EAAMG,eA2FtBC,EAxFE,SAAC,GAAwB,IAAtB9G,EAAqB,EAArBA,KAAMkD,EAAe,EAAfA,SACxB,EAAkCvE,mBAAS,MAA3C,mBAAOmH,EAAP,KAAkBiB,EAAlB,KAEA,IAAK/G,EACH,OAAO,cAAC,IAAD,CAAUJ,GAAG,aAGtB,IAAMoH,EAAc,uCAAG,4BAAArD,EAAA,+EAEDiC,EAAe5F,GAFd,OAEb6D,EAFa,OAGnBkD,EAAalD,EAAIC,KAAKgC,WAHH,gDAKnB9G,QAAQiI,MAAM,2BAAd,MACA/D,EAAS,CACPzE,QAAS,2BACTC,QAAS,kBACTF,QAAS,WATQ,yDAAH,qDAcpBU,qBAAU,WACR8H,MACC,IAEH,IAMIE,EANEC,EAAmB,uCAAG,WAAOhI,GAAP,SAAAwE,EAAA,6DAC1B3E,QAAQC,IAAI,oBADc,SAEpBoH,EAAalH,EAAIa,GAFG,OAG1BgH,IAH0B,2CAAH,sDAqDzB,OArCEE,EAPGpB,EAM2B,IAArBA,EAAUsB,OACL,4EAGZ,qBAAK3H,UAAU,MAAf,SACGqG,EAAUuB,KAAI,gBAAGlI,EAAH,EAAGA,GAAImI,EAAP,EAAOA,MAAOrB,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,gBAAiBqB,EAA7C,EAA6CA,cAA7C,OACb,qBAAK9H,UAAU,yBAAf,SACE,eAAC+H,EAAA,EAAD,CAAM/H,UAAU,cAAcS,GAAG,OAAOuH,KAAK,QAA7C,UACE,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,UAAaL,EAAM3C,OAClB2C,EAAMM,aAAe,cAACJ,EAAA,EAAKK,KAAN,UAAYP,EAAMM,cACvCN,EAAMQ,WACL,mBAAGC,KAAMT,EAAMQ,UAAW/C,OAAO,SAASiD,IAAI,aAA9C,SACE,cAAChD,EAAA,EAAD,CAAQvF,UAAU,OAAOjB,QAAQ,kBAAkByJ,KAAK,KAAxD,sBAGHX,EAAMY,aACL,mBAAGH,KAAMT,EAAMY,YAAanD,OAAO,SAASiD,IAAI,aAAhD,SACE,cAAChD,EAAA,EAAD,CAAQxG,QAAQ,YAAYyJ,KAAK,KAAKE,QAAS,kBAAMhB,EAAoBhI,IAAzE,2BAON,eAACqI,EAAA,EAAKY,OAAN,CAAa3I,UAA4B,IAAjBwG,EAAqB,cAAiBK,EAAQiB,GAAiB,eAAiB,aAAxG,UAAwHtB,EAAe,GAAK,qCAAGA,EAAH,uCACxH,IAAjBA,GAAsB,qCAAGC,EAAH,0CACvB,8BACGI,EAAQiB,YAtB4BpI,QAVjD,cAACkJ,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAM9I,UAAU,kBAAhB,0BA0CJ,qBAAKa,MAAOiC,EAAZ,SACE,sBAAK9C,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,uBACCyH,QCxBMsB,EAvDH,WACV,MAAwB7J,mBAPT,WAEf,IAAMqB,EAAO+D,aAAa0E,QAAQ,QAClC,OAAOzI,EAAOiE,KAAKyE,MAAM1I,GAAQ,KAIA2I,IAAjC,mBAAO3I,EAAP,KAAamD,EAAb,KACA,EAAkCxE,mBAAS,IAA3C,mBAAOiK,EAAP,KAAkBC,EAAlB,KAIM3F,EAAW,SAAC,GAAmC,IAAjCzE,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASF,EAAc,EAAdA,QAC9BW,EAAK2J,cACXD,GAAa,SAAAD,GAAS,4BAASA,GAAT,CAAoB,CAAEnK,UAASC,UAASF,UAASW,YAGzE,OACE,qCACE,cAAC,EAAD,CAAQa,KAAMA,IACb4I,EAAUvB,KAAI,SAAAnE,GAAQ,OACrB,cAAC,EAAD,CAEEzE,QAASyE,EAASzE,QAClBD,QAAS0E,EAAS1E,QAClBE,QAASwE,EAASxE,QAClBS,GAAI+D,EAAS/D,IAJR+D,EAAS/D,OAOlB,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE4J,KAAK,WACLC,QAAS,cAAC,EAAD,CAAQ9F,SAAUA,EAAUlD,KAAMA,EAAMmD,QAASA,MAE5D,cAAC,IAAD,CACE4F,KAAK,WACLC,QAAS,cAAC,EAAD,CAAQ9F,SAAUA,EAAUlD,KAAMA,EAAMmD,QAASA,MAE5D,cAAC,IAAD,CACE4F,KAAK,YACLC,QAAS,cAAC,EAAD,CAAS9F,SAAUA,EAAUkC,UA/B9B,kBAAMjC,EAAQ,OA+BsCnD,KAAMA,MAEpE,cAAC,IAAD,CACE+I,KAAK,mBACLC,QAAS,cAAC,EAAD,CAAgB9F,SAAUA,EAAUlD,KAAMA,MAErD,cAAC,IAAD,CACE+I,KAAK,IACLC,QAAS,cAACC,EAAD,CAAqBjJ,KAAMA,MAEtC,cAAC,IAAD,CACE+I,KAAK,aACLC,QAAS,cAAC,EAAD,CAAU9F,SAAUA,EAAUlD,KAAMA,eC5DnDkJ,EACJ,cAAC,IAAD,CAAeC,SAAUC,iBAAzB,SACE,cAAC,EAAD,MAIJC,IAASC,OAAOJ,EAAQK,SAASC,eAAe,W","file":"static/js/main.467bc4fe.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/my-skills' className='nav-link'>My Skills</NavLink>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    {/* <NavLink to='/' className='nav-link'>Home</NavLink> */}\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg=\"dark\" variant=\"dark\" expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Skill Tracker</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://bens-django-api.herokuapp.com/skill-tracker',\n  development: 'http://localhost:8000/skill-tracker'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","const headerHeight = '56px'\nexport const centerStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  maxWidth: '100%',\n  margin: '0'\n}\n\nexport const gradientStyles = {\n  background:\n    'linear-gradient(45deg, #fdbb2d, #dbca37, #b7d551, #94de71, #6fe393, #46e6b6, #14e8d5, #0ae7ef)',\n  color: 'white',\n  /* Take up 30% of the viewport's height, (30 out of 100) */\n  minHeight: `calc(100vh - ${headerHeight})`\n}\n\nexport const heroStyles = {\n  ...centerStyles,\n  ...gradientStyles\n}\n\nexport default heroStyles\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport heroStyles from '../../styles/heroStyles'\n\nconst SignUp = ({ msgAlert, setUser, user }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      // eslint-disable-next-line no-undef\n      localStorage.setItem('user', JSON.stringify(res.data.user))\n\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate || user) {\n    return <Navigate to='/my-skills' />\n  }\n\n  return (\n    <div style={heroStyles} className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='dark' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\nimport heroStyles from '../../styles/heroStyles'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser, user }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      // eslint-disable-next-line no-undef\n      localStorage.setItem('user', JSON.stringify(res.data.user))\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate || user) {\n    return <Navigate to='/my-skills' />\n  }\n\n  return (\n    <div style={heroStyles} className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='dark' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      localStorage.removeItem('user')\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n\n      // make a signOut axios request\n      await signOut(user)\n    }\n\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\nimport heroStyles from '../../styles/heroStyles'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/my-skills' />\n  }\n\n  return (\n    <div style={heroStyles} className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='dark' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\nimport { Link, Navigate } from 'react-router-dom'\nimport heroStyles from '../styles/heroStyles'\n\nconst Home = ({ user }) => {\n  if (user) {\n    return <Navigate to=\"my-skills\" />\n  }\n  return (\n    <div style={heroStyles}>\n      <h1>Skill Tracker</h1>\n      <h2 className='mb-3'>Sign In to start tracking skills!</h2>\n      <Link to='/sign-in'>\n        <button className='btn btn-dark btn-lg'>\n  Sign In\n        </button>\n      </Link>\n\n    </div>\n  )\n}\n\nexport default Home\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const getMyPractices = async (user) => {\n  const res = await axios.get(apiUrl + '/my-practices/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  }\n  )\n\n  // sort the practices by the `virtual` streakInDays\n  // since it is a virtual, we can't use `sort` in mongoose\n  res.data.practices.sort((a, b) => a.streakInDays - b.streakInDays || b.daysSinceStreak - a.daysSinceStreak)\n\n  // then pass along the sorted data\n  return Promise.resolve({ ...res })\n}\n\nexport const markPractice = (id, user) => {\n  axios.patch(apiUrl + '/mark-practice/' + id + '/', {}, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { getMyPractices, markPractice } from '../../api/practices'\n\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { gradientStyles } from '../../styles/heroStyles'\n\nconst isToday = (dateString) => {\n  const someDate = new Date(dateString)\n  const today = new Date()\n  return someDate.getDate() === today.getDate() &&\n    someDate.getMonth() === today.getMonth() &&\n    someDate.getFullYear() === today.getFullYear()\n}\n\nconst MySkills = ({ user, msgAlert }) => {\n  const [practices, setPractices] = useState(null)\n\n  if (!user) {\n    return <Navigate to=\"/sign-in\" />\n  }\n\n  const fetchPractices = async () => {\n    try {\n      const res = await getMyPractices(user)\n      setPractices(res.data.practices)\n    } catch (error) {\n      console.error('Failed to load practices', error)\n      msgAlert({\n        heading: 'Failed to load practices',\n        message: 'Try again later',\n        variant: 'danger'\n      })\n    }\n  }\n\n  useEffect(() => {\n    fetchPractices()\n  }, [])\n\n  const handlePracticeClick = async (id) => {\n    console.log('practice clicked')\n    await markPractice(id, user)\n    fetchPractices()\n  }\n\n  let practiceJSX\n\n  // if we're loading practices, show a loading spinner\n  if (!practices) {\n    practiceJSX = (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n    )\n  } else if (practices.length === 0) {\n    practiceJSX = <h3>It looks like dont have any practices yet!</h3>\n  } else {\n    practiceJSX = (\n      <div className='row'>\n        {practices.map(({ id, skill, streakInDays, daysSinceStreak, lastPracticed }) => (\n          <div className='col-md-6 col-lg-4 mb-4' key={id}>\n            <Card className='text-center' bg='dark' text='white'>\n              <Card.Body>\n                <Card.Title>{skill.name}</Card.Title>\n                {skill.description && <Card.Text>{skill.description}</Card.Text>}\n                {skill.reviewUrl && (\n                  <a href={skill.reviewUrl} target='_blank' rel=\"noreferrer\">\n                    <Button className='me-2' variant=\"outline-primary\" size=\"lg\">Review</Button>\n                  </a>\n                )}\n                {skill.practiceUrl && (\n                  <a href={skill.practiceUrl} target='_blank' rel=\"noreferrer\">\n                    <Button variant='secondary' size='lg' onClick={() => handlePracticeClick(id)}>\n                        Practice\n                    </Button>\n                  </a>\n                )}\n\n              </Card.Body>\n              <Card.Footer className={streakInDays === 0 ? 'text-danger' : (isToday(lastPracticed) ? 'text-success' : 'text-white')}>{streakInDays > 0 && <>{streakInDays} day practice streak 🔥</>}\n                {streakInDays === 0 && <>{daysSinceStreak} days since last streak 🛑</>}\n                <div>\n                  {isToday(lastPracticed)}\n                </div>\n              </Card.Footer>\n            </Card>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n  return (\n    <div style={gradientStyles}>\n      <div className='container'>\n        <h1 className='pt-4 pb-2'>My Skills</h1>\n        {practiceJSX}\n      </div>\n    </div>\n  )\n}\n\nexport default MySkills\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport UnauthenticatedHome from './components/UnauthenticatedHome'\nimport MySkills from './components/skills/MySkills'\n\nconst loadUser = () => {\n  // eslint-disable-next-line no-undef\n  const user = localStorage.getItem('user')\n  return user ? JSON.parse(user) : null\n}\n\nconst App = () => {\n  const [user, setUser] = useState(loadUser())\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} user={user} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} user={user} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n          <Route\n            path='/'\n            element={<UnauthenticatedHome user={user} />}\n          />\n          <Route\n            path='/my-skills'\n            element={<MySkills msgAlert={msgAlert} user={user} />}\n          />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}